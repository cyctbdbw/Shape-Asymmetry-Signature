%This script is for reconstrcting the surface by using certain spatial scales,
% and the decomposeEigenFunction.m is needed
n=144; %n is the total eigenfunction number. It can be changed to other number
% eigenFunctionsL is the eigenfunction of the left hemisphere calculated from the ShapeDNA
%leftSurface is the left surface mesh generated by FreeSurfer

coefsx_l=decomposeEigenFunction(eigenFunctionsL(:,1:n),leftSurface.vertices(:,1));
coefsy_l=decomposeEigenFunction(eigenFunctionsL(:,1:n),leftSurface.vertices(:,2));
coefsz_l=decomposeEigenFunction(eigenFunctionsL(:,1:n),leftSurface.vertices(:,3));

new_leftSurface.vertices(:,1) = eigenFunctionsL(:,1:n)*coefsx_l;
new_leftSurface.vertices(:,2) = eigenFunctionsL(:,1:n)*coefsy_l;
new_leftSurface.vertices(:,3) = eigenFunctionsL(:,1:n)*coefsz_l; 

coefsx_r=decomposeEigenFunction(eigenFunctionsR(:,1:n),rightSurface.vertices(:,1));
coefsy_r=decomposeEigenFunction(eigenFunctionsR(:,1:n),rightSurface.vertices(:,2));
coefsz_r=decomposeEigenFunction(eigenFunctionsR(:,1:n),rightSurface.vertices(:,3));

new_rightSurface.vertices(:,1) = eigenFunctionsR(:,1:n)*coefsx_r;
new_rightSurface.vertices(:,2) = eigenFunctionsR(:,1:n)*coefsy_r;
new_rightSurface.vertices(:,3) = eigenFunctionsR(:,1:n)*coefsz_r; 

f=leftSurface.faces;
v=new_leftSurface.vertices;

f1=rightSurface.faces;
v1=new_rightSurface.vertices;

figure;patch('Faces',f,'Vertices',v,'facecolor',[0.7,0.7,0.7],'edgecolor','none')
hold on
patch('Faces',f1,'Vertices',v1,'facecolor',[0.7,0.7,0.7],'edgecolor','none')
axis off; axis image; view([0 90]);set(gcf,'Color','w');
camlight
material dull
